<!--EXTERNAL_PROPERTIES: TargetFrameworkIsStandard;TargetFrameworkIsFramework;TargetFramework;TargetFramework-->
<Project Sdk="Microsoft.NET.Sdk">

  <!-- Build configuration -->
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <TargetFrameworks>net46;net472;netstandard2.0;netstandard2.1;net5.0</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <TargetFrameworks>netstandard2.0;netstandard2.1;net5.0</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <FailObsoleteTargetFrameworks>true</FailObsoleteTargetFrameworks>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <!-- Package metadata -->
  <PropertyGroup>
    <Title>IX Standard Extensions</Title>
    <Description>A library containing several extensions that aim to standardize and extend the .NET Framework functionality.</Description>
    <PackageReleaseNotes>- Under the hood upgrades
- A few extra extensions
- Set/Reset evets can now be awaited on</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup>
    <VersionPrefix>0.7.10</VersionPrefix>
    <VersionSuffix>alpha</VersionSuffix>
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>
    <AssemblyOriginatorKeyFile>../../opt/snk/ix.framework.strongname.snk</AssemblyOriginatorKeyFile>
    <RootNamespace>IX</RootNamespace>
  </PropertyGroup>

  <!-- Branding -->
  <PropertyGroup>
    <Authors>Adrian Mos</Authors>
    <Company />
    <Product>IX Framework</Product>
    <Copyright>Adrian Mos, 2016</Copyright>
    <PackageProjectUrl>https://github.com/adimosh/IX.Framework/</PackageProjectUrl>
    <NeutralLanguage>en</NeutralLanguage>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>

  <!-- Text templates -->
  <ItemGroup>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\ComponentModel\DisposableBase.InvokeIfNotDisposed.cs">
      <DependentUpon>DisposableBase.InvokeIfNotDisposed.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\ComponentModel\SynchronizationContextInvokerBase.InvokeActionsAndFuncs.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SynchronizationContextInvokerBase.InvokeActionsAndFuncs.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Contracts\Requires.NumericTypesLtGt.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Requires.NumericTypesLtGt.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Contracts\Requires.NumericTypesRangeValidation.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Requires.NumericTypesRangeValidation.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Contracts\Requires.NumericTypesPositiveValidation.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Requires.NumericTypesPositiveValidation.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Contracts\Requires.NumericTypesNegativeValidation.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Requires.NumericTypesNegativeValidation.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Efficiency\ImmutableValueTuple.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ImmutableValueTuple.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Efficiency\InDelegates.WithParameters.cs">
      <DependentUpon>InDelegates.WithParameters.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Efficiency\RefDelegates.WithParameters.cs">
      <DependentUpon>RefDelegates.WithParameters.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Efficiency\RefIteratorDelegates.WithParameters.cs">
      <DependentUpon>RefIteratorDelegates.WithParameters.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\ArrayExtensions.ForEachActions.cs">
      <DependentUpon>ArrayExtensions.ForEachActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\ArrayExtensions.ForEachRefActions.cs">
      <DependentUpon>ArrayExtensions.ForEachRefActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\ArrayExtensions.SequenceCompare.StandardTypes.cs">
      <DependentUpon>ArrayExtensions.SequenceCompare.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\ArrayExtensions.SequenceEquals.StandardTypes.cs">
      <DependentUpon>ArrayExtensions.SequenceEquals.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\ArrayExtensions.StandardTypes.cs">
      <DependentUpon>ArrayExtensions.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IDictionaryExtensions.StandardTypes.cs">
      <DependentUpon>IDictionaryExtensions.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IEnumerableExtensions.EquateSequentially.StandardTypes.cs">
      <DependentUpon>IEnumerableExtensions.EquateSequentially.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IEnumerableExtensions.ForEachActions.cs">
      <DependentUpon>IEnumerableExtensions.ForEachActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IEnumerableExtensions.ForEachRefActions.cs">
      <DependentUpon>IEnumerableExtensions.ForEachRefActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IEnumerableExtensions.SequenceCompare.StandardTypes.cs">
      <DependentUpon>IEnumerableExtensions.SequenceCompare.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IEnumerableExtensions.SequenceEquals.StandardTypes.cs">
      <DependentUpon>IEnumerableExtensions.SequenceEquals.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\IListCloneExtensions.StandardTypes.cs">
      <DependentUpon>IListCloneExtensions.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Extensions\LinqExtensions.ActionsAndFuncs.cs">
      <DependentUpon>LinqExtensions.ActionsAndFuncs.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="StandardExtensions\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\StandardExceptions.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>StandardExceptions.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Threading\ReaderWriterSynchronizedBase.ActionsAndFuncs.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ReaderWriterSynchronizedBase.ActionsAndFuncs.tt</DependentUpon>
    </Compile>
    <Compile Update="StandardExtensions\Threading\TaskFactoryExtensions.Actions.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TaskFactoryExtensions.Actions.tt</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Update="StandardExtensions\ComponentModel\DisposableBase.InvokeIfNotDisposed.tt">
      <LastGenOutput>DisposableBase.InvokeIfNotDisposed.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\ComponentModel\SynchronizationContextInvokerBase.InvokeActionsAndFuncs.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SynchronizationContextInvokerBase.InvokeActionsAndFuncs.cs</LastGenOutput>
    </None>
    <None Update="StandardExtensions\Contracts\Requires.NumericTypesLtGt.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Requires.NumericTypesLtGt.cs</LastGenOutput>
    </None>
    <None Update="StandardExtensions\Contracts\Requires.NumericTypesRangeValidation.tt">
      <LastGenOutput>Requires.NumericTypesRangeValidation.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Contracts\Requires.NumericTypesPositiveValidation.tt">
      <LastGenOutput>Requires.NumericTypesPositiveValidation.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Contracts\Requires.NumericTypesNegativeValidation.tt">
      <LastGenOutput>Requires.NumericTypesNegativeValidation.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Efficiency\ImmutableValueTuple.tt">
      <LastGenOutput>ImmutableValueTuple.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Efficiency\InDelegates.WithParameters.tt">
      <LastGenOutput>InDelegates.WithParameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Efficiency\RefDelegates.WithParameters.tt">
      <LastGenOutput>RefDelegates.WithParameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Efficiency\RefIteratorDelegates.WithParameters.tt">
      <LastGenOutput>RefIteratorDelegates.WithParameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\ArrayExtensions.ForEachActions.tt">
      <LastGenOutput>ArrayExtensions.ForEachActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\ArrayExtensions.ForEachRefActions.tt">
      <LastGenOutput>ArrayExtensions.ForEachRefActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\ArrayExtensions.SequenceCompare.StandardTypes.tt">
      <LastGenOutput>ArrayExtensions.SequenceCompare.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\ArrayExtensions.SequenceEquals.StandardTypes.tt">
      <LastGenOutput>ArrayExtensions.SequenceEquals.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\ArrayExtensions.StandardTypes.tt">
      <LastGenOutput>ArrayExtensions.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IDictionaryExtensions.StandardTypes.tt">
      <LastGenOutput>IDictionaryExtensions.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IEnumerableExtensions.EquateSequentially.StandardTypes.tt">
      <LastGenOutput>IEnumerableExtensions.EquateSequentially.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IEnumerableExtensions.ForEachActions.tt">
      <LastGenOutput>IEnumerableExtensions.ForEachActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IEnumerableExtensions.ForEachRefActions.tt">
      <LastGenOutput>IEnumerableExtensions.ForEachRefActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IEnumerableExtensions.SequenceCompare.StandardTypes.tt">
      <LastGenOutput>IEnumerableExtensions.SequenceCompare.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IEnumerableExtensions.SequenceEquals.StandardTypes.tt">
      <LastGenOutput>IEnumerableExtensions.SequenceEquals.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\IListCloneExtensions.StandardTypes.tt">
      <LastGenOutput>IListCloneExtensions.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\Extensions\LinqExtensions.ActionsAndFuncs.tt">
      <LastGenOutput>LinqExtensions.ActionsAndFuncs.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="StandardExtensions\StandardExceptions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StandardExceptions.cs</LastGenOutput>
    </None>
    <None Update="StandardExtensions\Threading\ReaderWriterSynchronizedBase.ActionsAndFuncs.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReaderWriterSynchronizedBase.ActionsAndFuncs.cs</LastGenOutput>
    </None>
    <None Update="StandardExtensions\Threading\TaskFactoryExtensions.Actions.tt">
      <LastGenOutput>TaskFactoryExtensions.Actions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
  </ItemGroup>

  <!-- References -->
  <ItemGroup Condition="'$(TargetFrameworkIsFramework)'=='true'">
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net46'">
    <PackageReference Include="System.ValueTuple" Version="[4.5.0,5)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkAdvanced)'!='true'">
    <PackageReference Include="System.Memory" Version="[4.5.4,5)" />
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="[4.5.4,5)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFrameworkIsFramework)'!='true'">
    <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
  </ItemGroup>

  <!-- Resources -->
  <ItemGroup>
    <EmbeddedResource Update="Resources.de.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.en.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.es.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.fr.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.it.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.ja.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <CustomToolNamespace></CustomToolNamespace>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.ro.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.ru.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.se.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>

</Project>