<!--EXTERNAL_PROPERTIES: TargetFrameworkIsFramework-->
<!--EXTERNAL_PROPERTIES: TargetFrameworkIsStandard-->
<!--EXTERNAL_PROPERTIES: TargetFramework-->
<Project Sdk="Microsoft.NET.Sdk">

  <!-- Build configuration -->
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <TargetFrameworks>net452;net46;net47;net472;netstandard2.0;netstandard2.1</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <Nullable>enable</Nullable>
    <FailObsoleteTargetFrameworks>true</FailObsoleteTargetFrameworks>
  </PropertyGroup>

  <!-- Package metadata -->
  <PropertyGroup>
    <Title>IX Standard Extensions</Title>
    <Description>A library containing several extensions that aim to standardize and extend the .NET Framework functionality.</Description>
    <LangVersion>8</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <PackageReleaseNotes>- Removed code generation project.
- Updated contracts to be more streamlined and to no longer be confused with Code Contracts.
- Introduced data generation.</PackageReleaseNotes>
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>
    <AssemblyOriginatorKeyFile>../../opt/snk/ix.framework.strongname.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <!-- Code imports -->
  <ItemGroup>
    <Compile Update="ComponentModel\DisposableBase.InvokeIfNotDisposed.cs">
      <DependentUpon>DisposableBase.InvokeIfNotDisposed.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Contracts\Requires.NumericTypesValidation.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Requires.NumericTypesValidation.tt</DependentUpon>
    </Compile>
    <Compile Update="Efficiency\ImmutableValueTuple.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ImmutableValueTuple.tt</DependentUpon>
    </Compile>
    <Compile Update="Efficiency\InDelegates.WithParameters.cs">
      <DependentUpon>InDelegates.WithParameters.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Efficiency\RefDelegates.WithParameters.cs">
      <DependentUpon>RefDelegates.WithParameters.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Efficiency\RefIteratorDelegates.WithParameters.cs">
      <DependentUpon>RefIteratorDelegates.WithParameters.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\ArrayExtensions.ForEachActions.cs">
      <DependentUpon>ArrayExtensions.ForEachActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\ArrayExtensions.ForEachRefActions.cs">
      <DependentUpon>ArrayExtensions.ForEachRefActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\ArrayExtensions.SequenceCompare.StandardTypes.cs">
      <DependentUpon>ArrayExtensions.SequenceCompare.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\ArrayExtensions.SequenceEquals.StandardTypes.cs">
      <DependentUpon>ArrayExtensions.SequenceEquals.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\ArrayExtensions.StandardTypes.cs">
      <DependentUpon>ArrayExtensions.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IDictionaryExtensions.StandardTypes.cs">
      <DependentUpon>IDictionaryExtensions.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IEnumerableExtensions.EquateSequentially.StandardTypes.cs">
      <DependentUpon>IEnumerableExtensions.EquateSequentially.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IEnumerableExtensions.ForEachActions.cs">
      <DependentUpon>IEnumerableExtensions.ForEachActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IEnumerableExtensions.ForEachRefActions.cs">
      <DependentUpon>IEnumerableExtensions.ForEachRefActions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IEnumerableExtensions.SequenceCompare.StandardTypes.cs">
      <DependentUpon>IEnumerableExtensions.SequenceCompare.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IEnumerableExtensions.SequenceEquals.StandardTypes.cs">
      <DependentUpon>IEnumerableExtensions.SequenceEquals.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\IListCloneExtensions.StandardTypes.cs">
      <DependentUpon>IListCloneExtensions.StandardTypes.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Extensions\LinqExtensions.ActionsAndFuncs.cs">
      <DependentUpon>LinqExtensions.ActionsAndFuncs.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Obsolete\0.4.3\Contract.NumericTypesValidation.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Contract.NumericTypesValidation.tt</DependentUpon>
    </Compile>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="Threading\Fire.AndForgetActionsAndFuncs.cs">
      <DependentUpon>Fire.AndForgetActionsAndFuncs.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="Threading\Fire.OnThreadPool.Parameters.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Fire.OnThreadPool.Parameters.tt</DependentUpon>
    </Compile>
    <Compile Update="Threading\TaskFactoryExtensions.Actions.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TaskFactoryExtensions.Actions.tt</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Update="ComponentModel\DisposableBase.InvokeIfNotDisposed.tt">
      <LastGenOutput>DisposableBase.InvokeIfNotDisposed.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Contracts\Requires.NumericTypesValidation.tt">
      <LastGenOutput>Requires.NumericTypesValidation.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Efficiency\ImmutableValueTuple.tt">
      <LastGenOutput>ImmutableValueTuple.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Efficiency\InDelegates.WithParameters.tt">
      <LastGenOutput>InDelegates.WithParameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Efficiency\RefDelegates.WithParameters.tt">
      <LastGenOutput>RefDelegates.WithParameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Efficiency\RefIteratorDelegates.WithParameters.tt">
      <LastGenOutput>RefIteratorDelegates.WithParameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\ArrayExtensions.ForEachActions.tt">
      <LastGenOutput>ArrayExtensions.ForEachActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\ArrayExtensions.ForEachRefActions.tt">
      <LastGenOutput>ArrayExtensions.ForEachRefActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\ArrayExtensions.SequenceCompare.StandardTypes.tt">
      <LastGenOutput>ArrayExtensions.SequenceCompare.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\ArrayExtensions.SequenceEquals.StandardTypes.tt">
      <LastGenOutput>ArrayExtensions.SequenceEquals.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\ArrayExtensions.StandardTypes.tt">
      <LastGenOutput>ArrayExtensions.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IDictionaryExtensions.StandardTypes.tt">
      <LastGenOutput>IDictionaryExtensions.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IEnumerableExtensions.EquateSequentially.StandardTypes.tt">
      <LastGenOutput>IEnumerableExtensions.EquateSequentially.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IEnumerableExtensions.ForEachActions.tt">
      <LastGenOutput>IEnumerableExtensions.ForEachActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IEnumerableExtensions.ForEachRefActions.tt">
      <LastGenOutput>IEnumerableExtensions.ForEachRefActions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IEnumerableExtensions.SequenceCompare.StandardTypes.tt">
      <LastGenOutput>IEnumerableExtensions.SequenceCompare.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IEnumerableExtensions.SequenceEquals.StandardTypes.tt">
      <LastGenOutput>IEnumerableExtensions.SequenceEquals.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\IListCloneExtensions.StandardTypes.tt">
      <LastGenOutput>IListCloneExtensions.StandardTypes.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Extensions\LinqExtensions.ActionsAndFuncs.tt">
      <LastGenOutput>LinqExtensions.ActionsAndFuncs.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Obsolete\0.4.3\Contract.NumericTypesValidation.tt">
      <LastGenOutput>Contract.NumericTypesValidation.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Threading\Fire.AndForgetActionsAndFuncs.tt">
      <LastGenOutput>Fire.AndForgetActionsAndFuncs.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Threading\Fire.OnThreadPool.Parameters.tt">
      <LastGenOutput>Fire.OnThreadPool.Parameters.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="Threading\TaskFactoryExtensions.Actions.tt">
      <LastGenOutput>TaskFactoryExtensions.Actions.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
  </ItemGroup>

  <!-- References -->
  <ItemGroup Condition="'$(TargetFrameworkIsFramework)'=='true'">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net452' OR '$(TargetFramework)'=='net46'">
    <PackageReference Include="System.ValueTuple" Version="[4.5.0,5)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'!='netstandard2.1'">
    <PackageReference Include="System.Memory" Version="[4.5.4,5)" />
  </ItemGroup>

  <!-- Resources -->
  <ItemGroup>
    <EmbeddedResource Update="Resources.de.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.en.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.es.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.fr.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.it.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.ja.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.ro.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.ru.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.se.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>

  <!-- Project system and dependencies -->
  <ItemGroup>
    <PackageReference Include="IX.Framework.ProjectSystem" Version="1.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

</Project>