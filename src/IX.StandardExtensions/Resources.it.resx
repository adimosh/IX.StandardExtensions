<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorLengthGoesPastArrayLimits" xml:space="preserve">
    <value>La lunghezza dovrebbe essere abbastanza piccola da non risultato in un'operazione di fuori dei limiti della matrice.</value>
  </data>
  <data name="ErrorLengthMustBeAPositiveInteger" xml:space="preserve">
    <value>La lunghezza deve essere un numero intero positivo.</value>
  </data>
  <data name="ErrorNotImplementedByDesign" xml:space="preserve">
    <value>Questo membro non è implementato da design.</value>
  </data>
  <data name="ErrorSourceIndexMustPointToALocationWithinTheArray" xml:space="preserve">
    <value>L'indice di origine deve puntare a una posizione all'interno della matrice.</value>
  </data>
  <data name="ErrorArgumentInvalidType" xml:space="preserve">
    <value>La dotazione in scatola o argomento polimorfico è di un tipo sbagliato.</value>
  </data>
  <data name="MoveNextNotInvoked" xml:space="preserve">
    <value>È innanzitutto necessario richiamare il metodo MoveNext prima di chiamare corrente.</value>
  </data>
  <data name="DictionaryItemAlreadyExists" xml:space="preserve">
    <value>Un elemento con la stessa chiave è già presente in questo dizionario.</value>
  </data>
  <data name="ItemAlreadyCapturedIntoUndoContextException" xml:space="preserve">
    <value>Impossibile completare l'operazione.</value>
  </data>
  <data name="ItemIsInEditModeExceptionDefaultMessage" xml:space="preserve">
    <value>L'operazione potrebbe non essere completata come l'elemento corrente è in modalità di modifica.</value>
  </data>
  <data name="ItemNotCapturedIntoUndoContextException" xml:space="preserve">
    <value>Impossibile completare l'operazione come l'elemento corrente non è intrappolato in un contesto di annullamento esistente.</value>
  </data>
  <data name="ItemNotInEditModeExceptionDefaultMessage" xml:space="preserve">
    <value>L'operazione potrebbe non essere completata come l'elemento corrente non è in modalità di modifica.</value>
  </data>
  <data name="OperationItemTypeError" xml:space="preserve">
    <value>Il tipo dell'argomento non è un tipo compatibile all'elenco.</value>
  </data>
  <data name="ErrorStopRetrying" xml:space="preserve">
    <value>L'operazione che ha effettuato una chiamata a questo metodo deve interrompere il tentativo, come errore critico, una modifica dello stato o condizioni di ambiente irrecuperabili garantiscono un errore nei tentativi successivi.</value>
  </data>
  <data name="ErrorArgumentNotPositiveInteger" xml:space="preserve">
    <value>L'argomento non è un numero intero positivo.</value>
  </data>
  <data name="SingleOrDefaultMultipleElements" xml:space="preserve">
    <value>La sequenza di input contiene più di un elemento.</value>
  </data>
  <data name="AnInvalidSetOfArgumentsWasSpecifiedArgumentNames" xml:space="preserve">
    <value>È stato specificato un insieme non valido di argomenti. Nomi degli argomenti: {0}</value>
  </data>
  <data name="TheProvidedArgumentsDoNotFormAValidRangeOfValuesArguments" xml:space="preserve">
    <value>Gli argomenti forniti non formano un intervallo di valori valido. Argomenti: {0}</value>
  </data>
  <data name="ErrorArgumentNotPositive" xml:space="preserve">
    <value>L'argomento non è un numero positivo.</value>
  </data>
  <data name="ErrorArgumentNullOrEmptyString" xml:space="preserve">
    <value>L'argomento stringa è null (Nothing in Visual Basic) o vuoto.</value>
  </data>
  <data name="ErrorArgumentNullOrWhiteSpaceString" xml:space="preserve">
    <value>L'argomento stringa è null (Nothing in Visual Basic), vuoto o solo spazi vuoti.</value>
  </data>
  <data name="ErrorArgumentNullOrEmptyBinary" xml:space="preserve">
    <value>L'argomento è null (Nothing in Visual Basic) o una matrice di byte vuota.</value>
  </data>
  <data name="ErrorArgumentNullOrEmptyCollection" xml:space="preserve">
    <value>L'argomento dell'insieme è null (Nothing in Visual Basic) o vuoto.</value>
  </data>
  <data name="AContractConditionIsNotBeingMet" xml:space="preserve">
    <value>Non viene soddisfatta una condizione contrattuale.</value>
  </data>
  <data name="ErrorArgumentNotValidIndex" xml:space="preserve">
    <value>L'argomento non può essere considerato un indice valido.</value>
  </data>
  <data name="ErrorArgumentNotValidLength" xml:space="preserve">
    <value>L'argomento non può essere considerato una lunghezza valida, in quanto deve essere un numero intero positivo inferiore alla lunghezza dell'insieme per cui viene utilizzato.</value>
  </data>
  <data name="ErrorArgumentNullOrEmptyArray" xml:space="preserve">
    <value>L'argomento della matrice è null (Nothing in Visual Basic) o vuoto o non ha la lunghezza richiesta.</value>
  </data>
  <data name="ErrorArgumentDoesNotMatch" xml:space="preserve">
    <value>L'argomento non corrisponde al modello previsto o non può essere abbinato in modo implicito a qualsiasi input supportato.</value>
  </data>
  <data name="ErrorArgumentInvalidPath" xml:space="preserve">
    <value>L'argomento fornito non può essere utilizzato come percorso valido.</value>
  </data>
  <data name="ErrorKeyFoundInDictionary" xml:space="preserve">
    <value>La chiave fornita era già presente nel dizionario.</value>
  </data>
  <data name="ErrorQueueIsEmpty" xml:space="preserve">
    <value>La coda è attualmente vuota.</value>
  </data>
  <data name="ErrorStackIsEmpty" xml:space="preserve">
    <value>Lo stack è attualmente vuoto.</value>
  </data>
  <data name="LimitArgumentNegativeExceptionDefaultTextNoArgument" xml:space="preserve">
    <value>L'argomento Limite deve essere un numero intero non negativo.</value>
  </data>
  <data name="LimitArgumentNegativeExceptionDefaultTextWithArgument" xml:space="preserve">
    <value>L'argomento Limite deve essere un numero intero non negativo. Nome argomento: {0}</value>
  </data>
  <data name="ErrorPersistedQueuesCannotBeCopied" xml:space="preserve">
    <value>Il tentativo di copiare l'intero contenuto di una coda persistente non è un'operazione supportata.</value>
  </data>
  <data name="ErrorPersistedQueuesCannotBeEnumerated" xml:space="preserve">
    <value>Il tentativo di enumerare una coda persistente non è un'operazione supportata.</value>
  </data>
  <data name="ErrorTheQueueIsCurrentlyInDisasterMode" xml:space="preserve">
    <value>La coda è attualmente in modalità di emergenza, le operazioni di enumerazione sono disabilitate in base alla progettazione.</value>
  </data>
  <data name="ErrorArgumentInRange" xml:space="preserve">
    <value>L'argomento è nell'intervallo indesiderato.</value>
  </data>
  <data name="ErrorArgumentNotGreaterThan" xml:space="preserve">
    <value>L'argomento non è maggiore di un valore desiderato.</value>
  </data>
  <data name="ErrorArgumentNotGreaterThanOrEqualTo" xml:space="preserve">
    <value>L'argomento non è minore o uguale a un valore desiderato.</value>
  </data>
  <data name="ErrorArgumentNotInRange" xml:space="preserve">
    <value>L'argomento non è nell'intervallo desiderato.</value>
  </data>
  <data name="ErrorArgumentNotLessThan" xml:space="preserve">
    <value>L'argomento non è minore di un valore desiderato.</value>
  </data>
  <data name="ErrorArgumentNotLessThanOrEqualTo" xml:space="preserve">
    <value>L'argomento non è minore o uguale a un valore desiderato.</value>
  </data>
  <data name="ErrorArgumentNotNegative" xml:space="preserve">
    <value>L'argomento non è un numero negativo.</value>
  </data>
  <data name="ErrorArgumentNotNegativeInteger" xml:space="preserve">
    <value>L'argomento non è un numero intero negativo.</value>
  </data>
  <data name="NoHistoryLevelsException" xml:space="preserve">
    <value>Non è stato possibile inizializzare stack di annullamento/ro, in quanto non sono stati definiti livelli di cronologia.</value>
  </data>
  <data name="TheCollectionIsCapturedIntoAContextItCannotStartAnExplicitTransaction" xml:space="preserve">
    <value>L'insieme viene acquisito in un contesto, non può avviare una transazione esplicita.</value>
  </data>
  <data name="TheGivenCollectionToRemoveIsNotContainedInTheInitialCollection" xml:space="preserve">
    <value>La raccolta specificata da rimuovere non è contenuta nella raccolta iniziale.</value>
  </data>
  <data name="ThereAlreadyIsAnOpenUndoTransaction" xml:space="preserve">
    <value>Esiste già una transazione di annullamento aperta.</value>
  </data>
  <data name="UndoAndRedoOperationsAreNotSupportedWhileAnExplicitTransactionBlockIsOpen" xml:space="preserve">
    <value>Le operazioni annulla e Rifa non sono supportate mentre è aperto un blocco di transazioni esplicito.</value>
  </data>
  <data name="AttemptingToAccessAnUndoRedoStackWhileUndoIsDisabledIsNotAllowed" xml:space="preserve">
    <value>Il tentativo di accedere a uno stack di annullamento/ro mentre l'annullamento è disabilitato non è consentito.</value>
  </data>
</root>