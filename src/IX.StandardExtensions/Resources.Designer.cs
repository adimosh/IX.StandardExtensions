//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IX {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IX.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A contract condition is not being met..
        /// </summary>
        internal static string AContractConditionIsNotBeingMet {
            get {
                return ResourceManager.GetString("AContractConditionIsNotBeingMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid set of arguments was specified. Argument names: {0}.
        /// </summary>
        internal static string AnInvalidSetOfArgumentsWasSpecifiedArgumentNames {
            get {
                return ResourceManager.GetString("AnInvalidSetOfArgumentsWasSpecifiedArgumentNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument does not match the expected pattern, or could not be implicitly matched to any supported input..
        /// </summary>
        internal static string ErrorArgumentDoesNotMatch {
            get {
                return ResourceManager.GetString("ErrorArgumentDoesNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument supplied cannot be used as a valid path..
        /// </summary>
        internal static string ErrorArgumentInvalidPath {
            get {
                return ResourceManager.GetString("ErrorArgumentInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied boxed or polymorphic argument is of a wrong type..
        /// </summary>
        internal static string ErrorArgumentInvalidType {
            get {
                return ResourceManager.GetString("ErrorArgumentInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is not a positive number..
        /// </summary>
        internal static string ErrorArgumentNotPositive {
            get {
                return ResourceManager.GetString("ErrorArgumentNotPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is not a positive integer..
        /// </summary>
        internal static string ErrorArgumentNotPositiveInteger {
            get {
                return ResourceManager.GetString("ErrorArgumentNotPositiveInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument cannot be considered a valid index..
        /// </summary>
        internal static string ErrorArgumentNotValidIndex {
            get {
                return ResourceManager.GetString("ErrorArgumentNotValidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument cannot be considered a valid length, as it has to be a positive integer less than the length of the collection it is used for..
        /// </summary>
        internal static string ErrorArgumentNotValidLength {
            get {
                return ResourceManager.GetString("ErrorArgumentNotValidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array argument is null (Nothing in Visual Basic), or empty, or does not have the required length..
        /// </summary>
        internal static string ErrorArgumentNullOrEmptyArray {
            get {
                return ResourceManager.GetString("ErrorArgumentNullOrEmptyArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is null (Nothing in Visual Basic) or an empty byte array..
        /// </summary>
        internal static string ErrorArgumentNullOrEmptyBinary {
            get {
                return ResourceManager.GetString("ErrorArgumentNullOrEmptyBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection argument is null (Nothing in Visual Basic) or empty..
        /// </summary>
        internal static string ErrorArgumentNullOrEmptyCollection {
            get {
                return ResourceManager.GetString("ErrorArgumentNullOrEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string argument is null (Nothing in Visual Basic) or empty..
        /// </summary>
        internal static string ErrorArgumentNullOrEmptyString {
            get {
                return ResourceManager.GetString("ErrorArgumentNullOrEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string argument is null (Nothing in Visual Basic), empty or whitespace-only..
        /// </summary>
        internal static string ErrorArgumentNullOrWhiteSpaceString {
            get {
                return ResourceManager.GetString("ErrorArgumentNullOrWhiteSpaceString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given key was already present in the dictionary..
        /// </summary>
        internal static string ErrorKeyFoundInDictionary {
            get {
                return ResourceManager.GetString("ErrorKeyFoundInDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length should be small enough to not result in an operation outside of the bounds of the array..
        /// </summary>
        internal static string ErrorLengthGoesPastArrayLimits {
            get {
                return ResourceManager.GetString("ErrorLengthGoesPastArrayLimits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length should be a positive integer..
        /// </summary>
        internal static string ErrorLengthMustBeAPositiveInteger {
            get {
                return ResourceManager.GetString("ErrorLengthMustBeAPositiveInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This member is not implemented by design..
        /// </summary>
        internal static string ErrorNotImplementedByDesign {
            get {
                return ResourceManager.GetString("ErrorNotImplementedByDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queue is currently empty..
        /// </summary>
        internal static string ErrorQueueIsEmpty {
            get {
                return ResourceManager.GetString("ErrorQueueIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source index must point to a location within the array..
        /// </summary>
        internal static string ErrorSourceIndexMustPointToALocationWithinTheArray {
            get {
                return ResourceManager.GetString("ErrorSourceIndexMustPointToALocationWithinTheArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stack is currently empty..
        /// </summary>
        internal static string ErrorStackIsEmpty {
            get {
                return ResourceManager.GetString("ErrorStackIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation that has made a call to this method should stop retrying, as a critical error, a state change or unrecoverable environment conditions guarantee failure on subsequent retries..
        /// </summary>
        internal static string ErrorStopRetrying {
            get {
                return ResourceManager.GetString("ErrorStopRetrying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit argument must be a non-negative integer..
        /// </summary>
        internal static string LimitArgumentNegativeExceptionDefaultTextNoArgument {
            get {
                return ResourceManager.GetString("LimitArgumentNegativeExceptionDefaultTextNoArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit argument must be a non-negative integer. Argument name: {0}.
        /// </summary>
        internal static string LimitArgumentNegativeExceptionDefaultTextWithArgument {
            get {
                return ResourceManager.GetString("LimitArgumentNegativeExceptionDefaultTextWithArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first invoke the MoveNext method before you can call Current..
        /// </summary>
        internal static string MoveNextNotInvoked {
            get {
                return ResourceManager.GetString("MoveNextNotInvoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input sequence contains more than one element..
        /// </summary>
        internal static string SingleOrDefaultMultipleElements {
            get {
                return ResourceManager.GetString("SingleOrDefaultMultipleElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided arguments do not form a valid range of values. Arguments: {0}.
        /// </summary>
        internal static string TheProvidedArgumentsDoNotFormAValidRangeOfValuesArguments {
            get {
                return ResourceManager.GetString("TheProvidedArgumentsDoNotFormAValidRangeOfValuesArguments", resourceCulture);
            }
        }
    }
}
