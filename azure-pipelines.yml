trigger:
- main

stages:
- stage: build_debug_stage
  displayName: "Build and test in debug mode"
  jobs:
  - job:
    strategy:
      matrix:
        Ubuntu18:
          imageName: 'ubuntu-18.04'
        Ubuntu20:
          imageName: 'ubuntu-20.04'
        MacOs10:
          imageName: 'macOS-10.15'
        MacOs11:
          imageName: 'macOS-11'
        Windows2019:
          imageName: 'windows-2019'
        Windows2022:
          imageName: 'windows-2022'
    pool:
      vmImage: $(imageName)
    steps:
    - checkout: self
      submodules: true
    - task: UseDotNet@2
      displayName: "Install .NET Core 3.1"
      inputs:
       version: 3.x
    - task: UseDotNet@2
      displayName: "Install .NET 7"
      inputs:
       version: 7.x
    - task: DotNetCoreCLI@2
      displayName: "Restore NuGet packages"
      inputs:
        command: 'restore'
        projects: "**/*.csproj"
        includeNuGetOrg: true
        verbosityRestore: 'Minimal'
    - task: DotNetCoreCLI@2
      displayName: "Build in Debug"
      inputs:
        command: 'build'
        projects: 'src/IX.StandardExtensions.sln'
        arguments: '-c Debug'
    - task: DotNetCoreCLI@2
      displayName: "Run tests"
      inputs:
        command: 'test'
        projects: 'src/IX.StandardExtensions.sln'
        arguments: '-c Debug --collect "XPlat Code coverage" --no-build -- RunConfiguration.DisableAppDomain=true'
    - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.7'
      displayName: 'Install ReportGenerator tool'
    - script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'
      displayName: 'Create reports'
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'

- stage: build_release_stage
  dependsOn: build_debug_stage
  displayName: "Build in release and create packages"
  jobs:
  - job:
    pool:
      vmImage: 'windows-2022'
    steps:
    - checkout: self
      submodules: true
    - task: DotNetCoreCLI@2
      displayName: 'Build in Release'
      inputs:
        command: 'build'
        projects: 'src/IX.StandardExtensions.sln'
        arguments: '-c Release --version-suffix alpha.$(Build.BuildNumber)'
    - task: CopyFiles@2
      inputs:
        contents: '**\*.nupkg'
        targetFolder: '$(build.artifactstagingdirectory)'
    - task: CopyFiles@2
      inputs:
        contents: '**\*.snupkg'
        targetFolder: '$(build.artifactstagingdirectory)'
    - task: NuGetAuthenticate@0
      displayName: 'NuGet Authenticate'
    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        publishVstsFeed: 'IX.Framework/IX.Framework_Beta_Feed'
        allowPackageConflicts: false